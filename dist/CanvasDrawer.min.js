"use strict";function HistoryManager(t){this.historian=t,this.setColor=function(t,i,e,s){let o=t+" "+i+" "+e+" "+s;this.historian.setKey(o)},this.setTexture=function(t){let i="#"+t;this.historian.setKey(i)},this.submitVanilla=function(t){this.historian.submitVanilla(t)},this.forget=function(){return this.historian.forget()},this.getKeys=function(){return this.historian.getKeys()},this.getMemo=function(){return this.historian.getMemo()},this.historian=t}function Historian(){this.memo={},this.keys=[],this.key="-1",this.submit=function(t,i){i in this.memo||(this.keys.push(i),this.memo[i]=[]),this.memo[i]=this.memo[i].concat(t)},this.submitVanilla=function(t){this.submit(t,this.key)},this.setKey=function(t){this.key=t},this.forget=function(){this.memo={},this.key=[]},this.getMemo=function(){return this.memo},this.getKeys=function(){return this.keys}}function Cartographer(t,i,e=function(){return[0,0]},s=function(){return[0,0]},o=function(t){},n=function(t){}){var r,a,h=$("#"+t),l=!1;h.css("cursor","grab");var u=[0,0],c=[0,0];h.on({mousemove:function(t){l&&function(t){let e=t.pageY-r,s=t.pageX-a;i(s,e,u[0],u[1],c[0],c[1])}(t)},mousedown:function(t){h.css("cursor","grabbing"),u=e(),c=s(),l=!0,r=t.pageY,a=t.pageX,h.scrollTop(),h.scrollLeft()},mouseleave:function(){l=!1,h.css("cursor","grab")},mouseup:function(){l=!1,h.css("cursor","grab")}}),h.on("wheel mousewheel",(function(t){t.preventDefault();let i=h.position();t.originalEvent.deltaY>0?n(t.pageX-i.left,t.pageY-i.top):t.originalEvent.deltaY<0&&o(t.pageX-i.left,t.pageY-i.top)}))}function Drawer(t,i){this.vertexShaderSource="\n        attribute vec2 a_position;\n        uniform vec2 u_resolution;\n        uniform vec2 u_scale;\n        uniform vec2 u_translation;\n\n        void main() {\n            vec2 scaledPosition = a_position * u_scale;\n            vec2 position = scaledPosition + u_translation;\n            \n            vec2 zeroToOne = position / u_resolution;\n            vec2 zeroToTwo = zeroToOne * 2.0;\n            vec2 clipSpace = zeroToTwo - 1.0;\n            clipSpace = clipSpace * vec2(1, -1);\n            gl_Position = vec4(clipSpace, 0, 1);\n        }\n    ",this.fragmentShaderSource="\n        precision mediump float;\n        uniform vec4 u_color;\n        uniform sampler2D tex;\n        \n        uniform vec2 u_tex_resolution;\n        uniform vec2 u_tex_translation;\n\n        uniform vec4 u_color_mask;\n        uniform vec4 u_texture_mask;\n\n        void main() {\n            mediump vec2 coord = vec2(gl_FragCoord.x, gl_FragCoord.y);\n            vec2 position = vec2(coord.x - u_tex_translation.x, coord.y + u_tex_translation.y);\n            vec2 zeroToOne = position / u_tex_resolution;\n            vec2 zeroToTwo = zeroToOne * 2.0;\n            vec2 clipSpace = zeroToTwo - 1.0;\n            clipSpace = clipSpace * vec2(1, -1);\n\n            mediump vec4 sample = texture2D(tex, clipSpace);\n            gl_FragColor = (u_color_mask * u_color) + (u_texture_mask * sample);\n        }\n    ",this.activeTextureUnit=-1,this.getMaximumTextureUnits=function(){return this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)},this.setActiveTextureUnit=function(t){if(t<0||t>=this.getMaximumTextureUnits())return!1;let i=this.gl.TEXTURE0+t;return this.gl.activeTexture(i),!0},this.setTexture=function(t,i){this.setActiveTextureUnit(i);let e=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,e),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGB,this.gl.RGB,this.gl.UNSIGNED_BYTE,t),this.gl.generateMipmap(this.gl.TEXTURE_2D),console.log("Texture is loaded to TEXTURE"+i)},this.setUseTexture=function(t){this.activeTexture=t,this.historyManager.setTexture(this.activeTexture),this.gl.uniform1i(this.textureLocation,t)},this.setColorEnable=function(){this.historyManager.setColor(this.color[0],this.color[1],this.color[2],this.color[3]),this.gl.uniform4f(this.colorMaskLocation,1,1,1,1),this.gl.uniform4f(this.textureMaskLocation,0,0,0,0)},this.setTextureEnable=function(){this.historyManager.setTexture(this.activeTexture),this.gl.uniform4f(this.colorMaskLocation,0,0,0,0),this.gl.uniform4f(this.textureMaskLocation,1,1,1,1)},this.createShader=function(t,i){var e=this.gl.createShader(t);if(this.gl.shaderSource(e,i),this.gl.compileShader(e),this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))return e;console.log(this.gl.getShaderInfoLog(e)),this.gl.deleteShader(e)},this.createProgram=function(t,i){var e=this.gl.createProgram();if(this.gl.attachShader(e,t),this.gl.attachShader(e,i),this.gl.linkProgram(e),this.gl.getProgramParameter(e,this.gl.LINK_STATUS))return e;console.log(this.gl.getProgramInfoLog(e)),this.gl.deleteProgram(e)},this.setColor=function(t,i,e,s){this.setColorVanilla(t,i,e,s),this.historyManager.setColor(t,i,e,s)},this.setColorVanilla=function(t,i,e,s){this.color=[t,i,e,s],this.gl.uniform4f(this.colorUniformLocation,t,i,e,s)},this.setPositions=function(t){this.setPositionsVanilla(t),this.historyManager.submitVanilla(t)},this.setPositionsVanilla=function(t){this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.STATIC_DRAW)},this.justDraw=function(t){this.setPositions(t),this.drawFromBuffer(t.length/2)},this.draw=function(t,i,e,s,o){this.setColor(i,e,s,o),this.setPositions(t),this.drawFromBuffer(t.length/2)},this.drawFromBuffer=function(t){var i=this.gl.TRIANGLES;this.gl.drawArrays(i,0,t)},this.clear=function(t,i,e,s){this.gl.clearColor(t,i,e,s),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.historyManager.forget()},this.repeatTheHistory=function(){let t=this.historyManager.getKeys(),i=this.historyManager.getMemo();for(let e=0;e<t.length;e++){let s=t[e];if("#"==s.charAt(0)){let t=parseInt(s.substring(1));this.setTextureEnable(),this.setUseTexture(t)}else{this.setColorEnable();let t=s.split(" ");this.setColor(t[0],t[1],t[2],t[3])}let o=i[s];this.setPositionsVanilla(o),this.drawFromBuffer(o.length/2)}},this.setScale=function(t){this.scale=[t,t],this.gl.uniform2fv(this.scaleLocation,this.scale)},this.updateScale=function(t){this.setScale(t),this.redraw()},this.setTranslation=function(t,i){this.translation=[t,i],this.gl.uniform2fv(this.translationLocation,this.translation)},this.updateTextureScale=function(t){this.setTextureScale(t),this.redraw()},this.setTextureScale=function(t){this.texScale=[t,t],this.setBaseTextureTranslation(0,-this.gl.canvas.height%(this.texResolution[1]*this.texScale[1])),this.setShaderTextureResolution(this.texScale[0]*this.texResolution[0],this.texScale[1]*this.texResolution[1])},this.setTextureResolution=function(t,i){this.texResolution=[t,i],this.setBaseTextureTranslation(0,-this.gl.canvas.height%(this.texResolution[1]*this.texScale[1])),this.setShaderTextureResolution(this.texScale[0]*t,this.texScale[1]*i)},this.setShaderTextureResolution=function(t,i){this.gl.uniform2f(this.textureResolutionUniformLocation,t,i)},this.setBaseTextureTranslation=function(t,i){this.baseTextureTranslation=[t,i],this.setTextureTranslation(this.texTranslation[0],this.texTranslation[1])},this.setTextureTranslation=function(t,i){this.texTranslation=[t,i],this.gl.uniform2fv(this.textureTranslationLocation,[this.texTranslation[0]+this.baseTextureTranslation[0],this.texTranslation[1]+this.baseTextureTranslation[1]])},this.updateTranslation=function(t,i){this.setTranslation(t,i),this.redraw()},this.updateRelativeTranslaton=function(t,i){this.updateTranslation(this.translation[0]+t,this.translation[1]+i)},this.redraw=function(){this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.useProgram(this.program),this.gl.enableVertexAttribArray(this.positionLocation),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer);var t=this.gl.FLOAT;this.gl.vertexAttribPointer(this.positionLocation,2,t,!1,0,0),this.repeatTheHistory()},this.updateScaleIntoPoint=function(t,i,e){let s=t/this.scale[0];this.setScale(t),this.setTextureScale(t),this.setTextureTranslation(s*this.texTranslation[0]+i-s*i,s*this.texTranslation[1]+e-s*e),this.setTranslation(s*this.translation[0]+i-s*i,s*this.translation[1]+e-s*e),this.redraw()},this.setup=function(){var t=this.vertexShaderSource,i=this.fragmentShaderSource,e=this.createShader(this.gl.VERTEX_SHADER,t),s=this.createShader(this.gl.FRAGMENT_SHADER,i);this.program=this.createProgram(e,s),this.gl.useProgram(this.program),this.positionAttributeLocation=this.gl.getAttribLocation(this.program,"a_position"),this.resolutionUniformLocation=this.gl.getUniformLocation(this.program,"u_resolution"),this.colorUniformLocation=this.gl.getUniformLocation(this.program,"u_color"),this.scaleLocation=this.gl.getUniformLocation(this.program,"u_scale"),this.translationLocation=this.gl.getUniformLocation(this.program,"u_translation"),this.textureLocation=this.gl.getUniformLocation(this.program,"tex"),this.textureResolutionUniformLocation=this.gl.getUniformLocation(this.program,"u_tex_resolution"),this.textureTranslationLocation=this.gl.getUniformLocation(this.program,"u_tex_translation"),this.colorMaskLocation=this.gl.getUniformLocation(this.program,"u_color_mask"),this.textureMaskLocation=this.gl.getUniformLocation(this.program,"u_texture_mask"),this.clear(0,0,0,0),this.gl.uniform2fv(this.scaleLocation,this.scale),this.gl.uniform2fv(this.translationLocation,this.translation),this.gl.uniform2fv(this.textureTranslationLocation,this.texTranslation),this.gl.uniform4f(this.colorMaskLocation,1,1,1,1),this.gl.uniform4f(this.textureMaskLocation,0,0,0,0),this.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.enableVertexAttribArray(this.positionAttributeLocation),this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height);var o=this.gl.FLOAT;this.gl.vertexAttribPointer(this.positionAttributeLocation,2,o,!1,0,0),this.gl.uniform2f(this.resolutionUniformLocation,this.gl.canvas.width,this.gl.canvas.height),this.gl.uniform2f(this.textureResolutionUniformLocation,this.gl.canvas.width,this.gl.canvas.height),this.texResolution=[this.gl.canvas.width,this.gl.canvas.height],this.baseTextureTranslation=[0,-this.gl.canvas.height%(this.texResolution[1]*this.texScale[1])]},this.constructor=function(t,i){this.historyManager=new HistoryManager(new Historian),this.color=[0,0,0,1],this.activeTexture=0,this.scale=[1,1],this.texScale=[1,1],this.texResolution=[0,0],this.baseTextureTranslation=[0,0],this.translation=[0,0],this.texTranslation=[0,0];var e=document.getElementById(t);this.gl=e.getContext("webgl"),this.gl?this.setup():i(),window.addEventListener("resize",(function(){drawer.gl.uniform2f(drawer.resolutionUniformLocation,drawer.gl.canvas.width,drawer.gl.canvas.height),drawer.redraw()}))},this.constructor(t,i)}function PositionMaker(){this.reset=function(){this.positions=[]},this.addPolygon=function(t){let i=earcut(t);for(let e=0;e<i.length;e++)this.positions.push(t[2*i[e]]),this.positions.push(t[2*i[e]+1])},this.addLine=function(t,i,e,s,o){let n=e-t,r=s-i,a=Math.sqrt(n*n+r*r),h=[-r/a,n/a],l=[t,i],u=[e,s],c=[l[0]+h[0]*o,l[1]+h[1]*o],g=[l[0]-h[0]*o,l[1]-h[1]*o],f=[u[0]-h[0]*o,u[1]-h[1]*o],m=[u[0]+h[0]*o,u[1]+h[1]*o];this.positions.push(c[0],c[1],g[0],g[1],f[0],f[1],f[0],f[1],m[0],m[1],c[0],c[1])},this.addCircle=function(t,i,e,s=15){let o,n,r=2*Math.PI/s,a=t+e*Math.cos(0),h=i+e*Math.sin(0);for(let s=0;s<=2*Math.PI;s+=r)o=t+e*Math.cos(s),n=i+e*Math.sin(s),this.positions.push(t,i,a,h,o,n),a=o,h=n},this.addSequenceLine=function(t,i){for(let e=0;e<t.length/2-1;e++)this.addLine(t[2*e],t[2*e+1],t[2*e+2],t[2*e+3],i)},this.getPositionsList=function(){return this.positions},this.reset()}function CanvasDrawer(t){this.loadDataFromInfo=function(t,i){return t in this.info?this.info[t]:i},this.draw=function(t,i,e,s){drawer.draw(this.positionMaker.positions,t,i,e,s),this.positionMaker.reset()},this.justDraw=function(){drawer.justDraw(this.positionMaker.positions),this.positionMaker.reset()},this.loadTexture=function(t,i){this.drawer.setTexture(t,i)},this.imagesLoadTexture=function(t,i=(()=>{})){var e=0,s=[],o=this.drawer.getMaximumTextureUnits();t.forEach(async t=>{let i=e;e++,s[t.idName]=i>=o?-1:i,this.loadTexture(t,i)}),i(s)},this.loadMultiImageToTextures=function(t,i=(()=>{})){var e=0,s=t.length,o=[],n=t=>{this.imagesLoadTexture(t,i)};t.forEach(t=>{let i=new Image;i.idName=t,o.push(i),i.onload=()=>{++e==s&&n(o)},i.src=t})},this.constructor=function(t){this.info=t;var i=this.loadDataFromInfo("id",!1),e=this.loadDataFromInfo("error",(function(){})),s=this.loadDataFromInfo("cartographer",!1),o=this.loadDataFromInfo("zoominrate",1.1),n=this.loadDataFromInfo("zoomoutrate",.9);if(!1!==i){if(this.drawer=new Drawer(i,e),s){let t=this.drawer;this.cartographer=new Cartographer("c",(function(i,e,s,o,n,r){t.setTextureTranslation(n+i,r+e),t.updateTranslation(s+i,o+e)}),(function(){return t.translation}),(function(){return t.texTranslation}),(function(i,e){let s=t.scale[0];t.updateScaleIntoPoint(s*o,i,e)}),(function(i,e){let s=t.scale[0];t.updateScaleIntoPoint(s*n,i,e)}))}this.positionMaker=new PositionMaker}else console.log("CanvasDrawer can not found element with id that you pass or maybe you don't pass any id!")},this.constructor(t)}